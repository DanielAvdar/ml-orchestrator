"""Module for specialized artifact types used in ML pipeline components.

This module defines various specialized artifact types that extend the base Artifact
class, providing specific implementations for different kinds of ML outputs and inputs.
"""

from typing import Dict, Optional, Union

from ml_orchestrator.artifacts import Artifact

MetricTypes = Union[int, float, bool, str]


class Model(Artifact):
    """Artifact type representing a machine learning model.

    This artifact type is used for storing and managing machine learning models
    in pipeline components.

    Attributes:
        schema_title: The schema title for this model artifact type

    """

    schema_title: str = "system.Model"


class Dataset(Artifact):
    """Artifact type representing a dataset.

    This artifact type is used for storing and managing datasets
    in pipeline components.

    Attributes:
        schema_title: The schema title for this dataset artifact type

    """

    schema_title = "system.Dataset"


class HTML(Artifact):
    """Artifact type representing HTML content.

    This artifact type is used for storing and managing HTML content
    generated by pipeline components, such as visualizations or reports.

    Attributes:
        schema_title: The schema title for this HTML artifact type

    """

    schema_title = "system.HTML"

    def __init__(self, name: Optional[str] = None, uri: Optional[str] = None, metadata: Optional[Dict] = None) -> None:
        """Initialize an HTML artifact with a name, URI, and metadata.

        Ensures the URI ends with .html extension.

        Args:
            name: The name of the artifact
            uri: The URI where the artifact is stored
            metadata: A dictionary of metadata to associate with the artifact

        """
        super().__init__(name=name, uri=uri, metadata=metadata)
        self.uri = self.uri + ".html"


class Markdown(Artifact):
    """Artifact type representing Markdown content.

    This artifact type is used for storing and managing Markdown content
    generated by pipeline components, such as documentation or reports.

    Attributes:
        schema_title: The schema title for this Markdown artifact type

    """

    schema_title = "system.Markdown"


class Metrics(Artifact):
    """Artifact type representing evaluation metrics.

    This artifact type is used for storing and managing evaluation metrics
    from pipeline components, such as accuracy, precision, or custom metrics.

    Attributes:
        schema_title: The schema title for this metrics artifact type

    """

    schema_title = "system.Metrics"

    def log_metric(self, metric: str, value: MetricTypes) -> None:
        """Log a metric value with the given name.

        Args:
            metric: The name of the metric to log
            value: The value of the metric, which must be one of the supported metric types

        """
        self.metadata[metric] = value
