[tool.poetry]
name = "ml-orchestrator"
version = "0.1.0"
description = "kubeflow extension"
authors = ["DanielAvdar <66269169+DanielAvdar@users.noreply.github.com>"]
license = "MIT"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Intended Audience :: Developers",
]
readme = "README.md"
packages = [
    { include = "ml_orchestrator", from = "." },
]

[tool.poetry.dependencies]
python = ">=3.9,<=3.13"
kfp = { version = ">=2.7.0", optional = true }

[tool.poetry.dev-dependencies]
pytest = ">=7.1.2"
hypothesis = ">=6.23.3"
pre-commit = ">=2.20.0"
pytest-cov = ">=4.0.0"
mypy = ">=0.991"
ruff = ">=0.3.1"
kfp  = ">=2.7.0"
#sybil[pytest] ="*"
sybil = { version = ">=1.4.0", extras = ["pytest"] }

[tool.poetry.extras]
editor = ["kfp"]


[tool.poetry.group.docs.dependencies]
#sphinx = ">=7.0.0"
sphinx = [
    { version = ">=8.2.0", markers = "python_version >= '3.11'" },
    { version = ">=7.0.0", markers = "python_version < '3.11'" }
]

sphinx-rtd-theme = "^3.0.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
include = [ "tests/**", "ml_orchestrator/**","dummy_components/**","docs/**"]
#exclude = ["docs/**"]

[tool.ruff.lint]
select = ["F", "B", "I", "F", "W", "E", "A", "N","D","DOC"]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "DOC"]
"docs/*" = ["D", "DOC"]
"dummy_components/*" = ["D", "DOC"]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = false
[tool.pytest.ini_options]
addopts = "-p no:doctest"
